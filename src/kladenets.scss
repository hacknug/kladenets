@use "sass:map";

// Configs
$kladenets: () !default;
$kladenets: map.merge(
  (
    "color-set": (
      "blue": (
        h: "211",
        s: "100%",
        l: "50%",
      ),
      "indigo": (
        h: "263",
        s: "90%",
        l: "51%",
      ),
      "purple": (
        h: "271",
        s: "70%",
        l: "60%",
      ),
      "pink": (
        h: "330",
        s: "70%",
        l: "63%",
      ),
      "red": (
        h: "349",
        s: "83%",
        l: "55%",
      ),
      "orange": (
        h: "27",
        s: "98%",
        l: "54%",
      ),
      "yellow": (
        h: "50",
        s: "100%",
        l: "60%",
      ),
      "green": (
        h: "145",
        s: "60%",
        l: "60%",
      ),
      "teal": (
        h: "170",
        s: "70%",
        l: "55%",
      ),
      "cyan": (
        h: "180",
        s: "80%",
        l: "60%",
      ),
      "text-color": (
        h: "238",
        s: "71%",
        l: "11%",
      ),
      "link-color": (
        h: var(--blue-h),
        s: var(--blue-s),
        l: var(--blue-l),
      ),
      "bg-color": (
        h: "0",
        s: "0%",
        l: "100%",
      ),
      "code-color": (
        h: calc(var(--link-color-h) + 180),
        s: var(--link-color-s),
        l: var(--link-color-l),
      ),
    ),

    "color-alpha-iterator": (
      0: "0",
      3: ".03",
      5: ".05",
      7: ".07",
      10: ".1",
      15: ".15",
      20: ".2",
      25: ".25",
      30: ".3",
      35: ".35",
      40: ".4",
      45: ".45",
      50: ".5",
      55: ".55",
      60: ".6",
      65: ".65",
      70: ".7",
      75: ".75",
      80: ".8",
      85: ".85",
      90: ".9",
      95: ".95",
      100: "1",
    ),

    "color-saturation-iterator": (
      0: "0%",
      3: "3%",
      5: "5%",
      7: "7%",
      10: "10%",
      15: "15%",
      20: "20%",
      25: "25%",
      30: "30%",
      35: "35%",
      40: "40%",
      45: "45%",
      50: "50%",
      55: "55%",
      60: "60%",
      65: "65%",
      70: "70%",
      75: "75%",
      80: "80%",
      85: "85%",
      90: "90%",
      95: "95%",
      100: "100%",
    ),

    "color-lightness-iterator": (
      0: "0%",
      3: "3%",
      5: "5%",
      7: "7%",
      10: "10%",
      15: "15%",
      20: "20%",
      25: "25%",
      30: "30%",
      35: "35%",
      40: "40%",
      45: "45%",
      50: "50%",
      55: "55%",
      60: "60%",
      65: "65%",
      70: "70%",
      75: "75%",
      80: "80%",
      85: "85%",
      90: "90%",
      95: "95%",
      100: "100%",
    ),

    "color-lightness-pretty-iterator": (
      lightest: "95",
      lighter: "80",
      light: "60",
      dark: "40",
      darker: "20",
      darkest: "5",
    ),
  ),

  $kladenets
);

$color-set-arr:
  "blue",
  "indigo",
  "purple",
  "pink",
  "red",
  "orange",
  "yellow",
  "green",
  "teal",
  "cyan",
  "text-color",
  "link-color",
  "bg-color",
  "code-color",
;

// Utilities
@mixin generate-namespaced-vars($namespace, $object) {
  @each $k, $v in $object {
    --#{$namespace}-#{$k}: #{$v};
  }
}

@mixin generate-color-vars($namespace, $object) {
  /* Color - #{$namespace} */
  @include generate-namespaced-vars($namespace, $object);

  --#{$namespace}-hsl: var(--#{$namespace}-h), var(--#{$namespace}-s), var(--#{$namespace}-l);
  --#{$namespace}: hsl(var(--#{$namespace}-hsl));

  // TODO: space-separated level 4 specs seems doesn't work well with variables on HSLA
  @each $k, $v in map.get($kladenets, "color-alpha-iterator") {
    --#{$namespace}-a#{$k}: hsla(var(--#{$namespace}-hsl), #{$v});
  }

  // NOTE: --namespace-$k is for backward compatibility, use --namespace-a$k instead
  @each $k, $v in map.get($kladenets, "color-alpha-iterator") {
    --#{$namespace}-#{$k}: var(--#{$namespace}-a#{$k});
  }

  @each $k, $v in map.get($kladenets, "color-saturation-iterator") {
    --#{$namespace}-s#{$k}: hsl(var(--#{$namespace}-h) #{$v} var(--#{$namespace}-l));
  }

  @each $k, $v in map.get($kladenets, "color-lightness-iterator") {
    --#{$namespace}-l#{$k}: hsl(var(--#{$namespace}-h) var(--#{$namespace}-s) #{$v});
  }

  @each $k, $v in map.get($kladenets, "color-lightness-pretty-iterator") {
    --#{$namespace}-#{$k}: var(--#{$namespace}-l-#{$v});
  }
}

:root {

  /*
    Typography
  ----------------------------------------------------------------------------*/
  --fontstack-prefix: -apple-system, BlinkMacSystemFont,;
  --fontstack-sans-serif: "Helvetica Neue", Arial, sans-serif;
  --fontstack-serif: Georgia, serif;
  --fontstack-monospace: Menlo, Consolas, monospace;
  --fontstack-default: var(--fontstack-prefix) var(--fontstack-sans-serif);
  --font-size-base: 1rem;
  --font-size-factor: 1vw;
  --font-size: calc(var(--font-size-base) + var(--font-size-factor));
  --font-features: "halt", "cv01", "cv02", "cv03";
  --line-height: calc(20 / 14);

  /*
    Layout
  ----------------------------------------------------------------------------*/
  $kld-breakpoints: (
    xs: 400px,
    sm: 640px,
    md: 1080px,
    lg: 1600px,
  ) !default;
  @include generate-namespaced-vars(breakpoint, $kld-breakpoints);

  $kld-space: (
    xs: 1.2vw,
    sm: 4vw,
    md: 8vw,
    lg: 24vw,
  ) !default;
  @include generate-namespaced-vars(space, $kld-space);

  $kld-border: (
    xs: .5px,
    sm: 1px,
    md: 2px,
    lg: 4px,
  ) !default;
  @include generate-namespaced-vars(border, $kld-border);

  /* Nav */
  --nav-padding: 1.4vmax;
  --nav-item-space: 1vmax;

  /*
    Colors
  ----------------------------------------------------------------------------*/
  @each $k, $v in map.get($kladenets, "color-set") {
    @include generate-color-vars($k, map.get(map.get($kladenets, "color-set"), $k));
  }

  /*
    Color variants/variable mappings (based on our main color scheme)
  ----------------------------------------------------------------------------*/
  --border-color: var(--text-color-10);
}
